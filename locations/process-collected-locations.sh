#!/bin/bash -e

# This script requires csvkit to be installed. Install it using
# "sudo pip install csvkit"

INPUT=$1
OUTPUT=out
UNHANDLED=unhandled

mkdir -p $OUTPUT
mkdir -p $UNHANDLED

echo "Will parse $INPUT and write results to $OUTPUT (and unhandled parts to $UNHANDLED)"
if [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    SED=sed
else # Use GNU sed, macOS BSD sed is too stupid
    SED=gsed
fi
### Clean up the bad CSV file generated by collection
# Texts with commas that are not quoted will fail. Just get rid of those.
# NOTE: "Suri" and "Stiba" are two NPCs with comma in their names that really
# should be kept. For now, fix manually.

grep -E "(,.*){6,}" $INPUT > $UNHANDLED/incorrect-names.csv
grep -v -E "(,.*){6,}" $INPUT > tmp1.csv

# Remove invisible "À" characters
tr -d "À" < tmp1.csv > tmp2.csv

# Remove space after comma and add header
echo "category,name,extra,x,y,z" > tmp3.csv
sed -e 's/, /,/g' tmp2.csv >> tmp3.csv

# Remove "duplicate" entries that differ only by Y coordinate
# We want the lowest Y coordinate, so sort in increasing order and keep
# just the first line in the AWK script.
csvsort -c "category,name,x,z,y" tmp3.csv > tmp4.csv
gawk -f dedup.awk < tmp4.csv > cleaned.csv
rm tmp1.csv tmp2.csv tmp3.csv tmp4.csv

# Extract data
csvgrep -c category -m BOOTH cleaned.csv | csvcut -c "x,y,z" > $OUTPUT/booths.csv
csvgrep -c category -m TERRITORY cleaned.csv | csvcut -c "name,x,y,z" > $OUTPUT/territory-posts.csv
csvgrep -c category -m DUNGEON cleaned.csv | csvcut -c "name,x,y,z" > $OUTPUT/dungeons.csv

csvgrep -c category -m Service cleaned.csv | csvcut -c "name,x,y,z" > tmp1.csv
$SED -E -e 's/Click to go to your housing plot/Housing Balloon/' -e 's/(.) (.*) (\1)/\2 Station/' tmp1.csv > tmp2.csv
csvsort -c "name,x,y,z" < tmp2.csv > $OUTPUT/services.csv
rm tmp1.csv tmp2.csv

csvgrep -c category -m NPC cleaned.csv | csvcut -c "name,x,y,z" > tmp-npc.csv
csvgrep -c name -r ".* Post .* Lv. .*" tmp-npc.csv | sed -e 's/Post //' > $OUTPUT/mini-quests.csv

# The "Agitated" citizen is a normal NPCs, not a town-specific citizen.
csvgrep -c name -r ".* Citizen$" tmp-npc.csv > tmp1.csv
grep -v "Agitated Citizen" tmp1.csv > $OUTPUT/citizens.csv
rm tmp1.csv

csvgrep -c name -r ".* Merchant$" tmp-npc.csv > tmp1.csv
# Tool Merchants should count as "Service" instead
grep -v "^Tool Merchant," tmp1.csv > $OUTPUT/special-merchants.csv
grep "^Tool Merchant," tmp1.csv > tmp2.csv
cat $OUTPUT/services.csv tmp2.csv > tmp3.csv
csvsort -c "name,x,y,z" < tmp3.csv > $OUTPUT/services.csv
rm tmp1.csv tmp2.csv tmp3.csv

csvgrep -c name -r "^Key Collector$" tmp-npc.csv | csvcut -c "x,y,z" > $OUTPUT/key-collectors.csv

csvgrep -c name -r "(^C.S.S Wavebreaker Captain$)|(^Lift Mechanic$)|(^Seaskipper Captain$)" tmp-npc.csv > tmp1.csv
# Two of the Hot Air Balloon captains are fast travel, the third is not
grep -E '(^Hot Air Balloon Captain,)((-15)|(7))..,' tmp-npc.csv >> tmp1.csv
# Strip the last word of the name (which is the NPC title like "Captain")
sed -E -e 's/^(.*) ([^ ,]+),/\1,/' tmp1.csv > tmp2.csv
# Use the information post outside The Juggler as the best marker for fast travel
grep -E -e '^Information Post,-4..,..,-4...$' tmp-npc.csv | sed -e 's/Information Post/The Juggler/' >> tmp2.csv
csvsort -c "name,x,y,z" < tmp2.csv > $OUTPUT/fast-travel.csv
rm tmp1.csv tmp2.csv

# Everything else is a normal NPC
IGNORED_NPC="Hm... Nothing here."
csvgrep -i -c name -r '(.* Post .* Lv. .*)|(.* Citizen$)|(.* Merchant$)|(^Key Collector$)|(^C.S.S Wavebreaker Captain$)|(^Lift Mechanic$)|(^Seaskipper Captain$)'"|(^${IGNORED_NPC})" tmp-npc.csv > tmp1.csv
grep -v -E -e '(^Hot Air Balloon Captain,)((-15)|(7))..,' -e '^Information Post,-4' tmp1.csv > tmp2.csv
grep "Agitated Citizen" tmp-npc.csv >> tmp2.csv
csvsort -c "name,x,y,z" < tmp2.csv > $OUTPUT/npc.csv
rm tmp1.csv tmp2.csv tmp-npc.csv

csvgrep -c category -m Other cleaned.csv > tmp-other.csv

csvcut -c material materials.csv | sed -E -e 's/(.*)/Other,\1,§a\1,/' > tmp-materials.txt
echo "category,name,extra,x,y,z" > tmp1.csv
grep -f tmp-materials.txt tmp-other.csv >> tmp1.csv
csvcut -c "name,x,y,z" < tmp1.csv > $OUTPUT/gathering-materials.csv
grep -v -f tmp-materials.txt tmp-other.csv > non-material-tmp.csv
rm tmp1.csv tmp-materials.txt

csvgrep -c name -r '(Bank)|( Shop)|( Store)$' non-material-tmp.csv | csvcut -c "name,x,y,z" > $OUTPUT/shops-banks.csv
csvgrep -c extra -m "§cBoss Altar" non-material-tmp.csv | csvcut -c "x,y,z" > $OUTPUT/boss-altars.csv
csvgrep -c extra -m "§c§lEXIT" non-material-tmp.csv | csvcut -c "x,y,z" > $OUTPUT/cave-exits.csv

csvgrep -i -c name -r '(Bank)|( Shop)|( Store)|(Boss Altar)|EXIT$' non-material-tmp.csv > $UNHANDLED/remaining-other.csv
rm tmp-other.csv non-material-tmp.csv cleaned.csv


# Other,Forgery,§6§lForgery,-841,123,-4910
# EXIT
